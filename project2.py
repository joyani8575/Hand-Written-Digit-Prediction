# -*- coding: utf-8 -*-
"""Project2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NZMBx1-eBmfmJUs9olFDzWGOVCu3R6KV

**Title**

Hand Written Digit Prediction

**Objective**

Handwritten digit recognition is a prevalent multiclass classification problem usually built into the software of mobile banking applications, as well as more traditional automated teller machines, to give users the ability to automatically deposit paper checks.

**Data Source**

https://youtu.be/UD6co1HVpO4?si=cmN6fqxcEgxPb3FL

**Import Library**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""**Import Data**"""

from sklearn.datasets import load_digits

df = load_digits()

"""**Describe Data**"""

_, axes = plt.subplots(nrows=1, ncols=4, figsize=(10,3))
for ax, image, label in zip(axes, df.images, df.target):
  ax.set_axis_off()
  ax.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')
  ax.set_title('Training: %i' % label)

"""**Data Visualization**"""

df.images.shape

df.images[0]

df.images[0].shape

"""**Data Preprocessing**"""

len(df.images)

n_samples = len(df.images)
data = df.images.reshape((n_samples, -1))

data[0]

data[0].shape

data.shape

data.min()

data.max()

data = data/16

data.min()

data.max()

data[0]

"""**Define Target Variable (y) and Feature Variables(X)**

**Train Test Split**
"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(data, df.target, test_size=0.3)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

"""**Modelling**

**Model Evaluation**
"""

from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier()

rf.fit(X_train, y_train)

"""**Prediction**"""

y_pred = rf.predict(X_test)

y_pred

from sklearn.metrics import confusion_matrix, classification_report

confusion_matrix(y_test, y_pred)

print(classification_report(y_test, y_pred))

